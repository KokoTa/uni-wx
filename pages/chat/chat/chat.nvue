<template>
	<view>
		<!-- 导航 -->
		<NavBar title="王小明" :showBack="true">
			<IconButton slot="right" :icon="'\ue6fd'"></IconButton>
		</NavBar>
		
		<!-- 聊天区 -->
		<scroll-view scroll-y class="position-fixed left-0 right-0 px-3" :style="chatBodyTopAndBottom" :show-scrollbar="false">
			<block v-for="(item, index) in list" :key="index">
				<ChatItem ref="chatItem" :item="item" :index="index" :preTime="index > 0 ? list[index - 1].createTime : 0" @long="long"></ChatItem>
			</block>
		</scroll-view>
		
		<!-- 底部输入框 -->
		<view class="position-fixed w-100 border-top flex align-center" :style="`background-color: #F7F7F6; height: 105rpx; bottom: ${keyboardHeight}px;`">
			<IconButton :icon="'\ue6fd'"></IconButton>
			<textarea v-model="text" class="flex-1 p-1 font-md" style="height: 75rpx;" fixed :adjust-position="false" ></textarea>
			<IconButton :icon="'\ue6fd'"></IconButton>
			<IconButton v-if="text.length === 0" :icon="'\ue6fd'"></IconButton>
			<view v-else class="main-gb-color rounded mr-3 px-2 py-1" @click="send('text')">
				<text class="font-md text-light">发送</text>
			</view>
		</view>
		
		<!-- 扩展菜单栏 -->
		<Popup ref="popup" :bodyWidth="240" :bodyHeight="getMenusHeight" :tabbarHeight="105">
			<view class="flex flex-column" style="width: 240rpx;" :style="getMenusSytle">
				<view v-for="(item, index) in getMenus" class="flex-1 flex align-center pl-3" hover-class="bg-light" :key="index"
					@click="clickEvent(item.event)">
					<text class="font-md">{{ item.name }}</text>
				</view>
			</view>
		</Popup>
	</view>
</template>

<script>
	import NavBar from '@/components/nav-bar.vue';
	import IconButton from '@/components/icon-button.vue'
	import Avatar from '@/components/avatar.vue'
	import ChatItem from '@/components/chat-item.vue'
	import Popup from '@/components/popup.vue'
	
	// #ifdef APP-PLUS-NVUE
	const dom = weex.requireModule('dom')
	// #endif
	
	export default {
		components: {
			NavBar,
			IconButton,
			Avatar,
			ChatItem,
			Popup
		},
		computed: {
			getMenusHeight() {
				const H = 100
				return this.menus.length * H
			},
			getMenusSytle() {
				return `height: ${this.getMenusHeight}rpx`
			},
			isSelf() {
				const myId = 1
				const userId = this.propIndex > -1 ? this.list[this.propIndex].user_id : 0
				return myId === userId
			},
			getMenus() {
				// 别人的气泡信息不能撤回，要排除
				return this.menus.filter((item) => !(item.name === '撤回' && !this.isSelf))
			},
			// 聊天区域 bottom(键盘顶起后，聊天内容区域也要相应改变)
			chatBodyTopAndBottom() {
				return `top: ${this.navBarHeight}px; bottom: ${uni.upx2px(105) + this.keyboardHeight}px;`
			}
		},
		data() {
			return {
				statusBarHeight: 0,
				navBarHeight: 0,
				menus: [
					{
						name: '复制',
						event: 'setTop'
					},
					{
						name: '发送给朋友',
						event: 'delChat'
					},
					{
						name: '收藏',
						event: 'delChat'
					},
					{
						name: '删除',
						event: 'delChat'
					},
					{
						name: '多选',
						event: 'delChat'
					},
					{
						name: '撤回',
						event: 'remove'
					}
				],
				list: [
					{
						avatar: '/static/userpic/10.jpg',
						user_id: 1,
						nickname: '昵称',
						type: 'text', // image/audio/video/text/file/share
						data: '你好1',
						createTime: 1590472772,
						isRemove: false
					},
					{
						avatar: '/static/userpic/11.jpg',
						user_id: 2,
						nickname: '昵称',
						type: 'text', // image/audio/video/text/file/share
						data: '你好2',
						createTime: 1590472572,
						isRemove: false
					},
					{
						avatar: '/static/userpic/10.jpg',
						user_id: 1,
						nickname: '昵称',
						type: 'text', // image/audio/video/text/file/share
						data: '你好1',
						createTime: 1590472472,
						isRemove: false
					},
					{
						avatar: '/static/userpic/11.jpg',
						user_id: 2,
						nickname: '昵称',
						type: 'text', // image/audio/video/text/file/share
						data: '你好2',
						createTime: 1590472072,
						isRemove: false
					},
					{
						avatar: '/static/userpic/10.jpg',
						user_id: 1,
						nickname: '昵称',
						type: 'text', // image/audio/video/text/file/share
						data: '你好1',
						createTime: 1590472472,
						isRemove: false
					},
					{
						avatar: '/static/userpic/11.jpg',
						user_id: 2,
						nickname: '昵称',
						type: 'text', // image/audio/video/text/file/share
						data: '你好2',
						createTime: 1590472072,
						isRemove: true
					}
				],
				propIndex: 0, // 当前操作的聊天气泡
				keyboardHeight: 0,
				text: ''
			}
		},
		methods: {
			long({ x, y, index }) {
				this.propIndex = index
				this.$refs.popup.show(x, y);
			},
			clickEvent(type) {
				switch(type) {
					case 'remove':
						this.list[this.propIndex].isRemove = true
						break;
				}
				this.$refs.popup.hide()
			},
			// 聊天区域滚动到底部
			scrollChatBodyToBottom() {
				// #ifdef APP-PLUS-NVUE
				const lastItem = this.$refs.chatItem[this.$refs.chatItem.length - 1]
				if (lastItem) dom.scrollToElement(lastItem, {})
				// #endif
			},
			send(type) {
				const obj = {
					avatar: '/static/userpic/10.jpg',
					user_id: 1,
					nickname: '昵称',
					type: type, // image/audio/video/text/file/share
					data: this.text,
					createTime: (new Date()).getTime(),
					isRemove: false
				}
				
				switch(type) {
					case 'text':
						this.list.push(obj)
						this.text = ''
				}
				
				setTimeout(() => this.scrollChatBodyToBottom(), 100)
			}
		},
		mounted() {
			// #ifdef APP-PLUS-NVUE
			// 获取手机顶部 bar 的高度(包含信号啊、wifi啊的那个 bar)
			this.statusBarHeight = plus.navigator.getStatusbarHeight(); 
			// #endif
			this.navBarHeight = this.statusBarHeight + uni.upx2px(90);
			
			// 监听键盘高度变化(只有APP和微信/腾讯小程序支持)
			uni.onKeyboardHeightChange(res => {
				this.keyboardHeight = res.height
				if (this.keyboardHeight > 0) this.scrollChatBodyToBottom()
			})
		}
	}
</script>

<style>

</style>
